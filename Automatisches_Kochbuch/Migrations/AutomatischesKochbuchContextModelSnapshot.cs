// <auto-generated />
using System;
using Automatisches_Kochbuch.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Automatisches_Kochbuch.Migrations
{
    [DbContext(typeof(AutomatischesKochbuchContext))]
    partial class AutomatischesKochbuchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Automatisches_Kochbuch.Model.LnkTabRezeptZutaten", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdRezept")
                        .HasColumnName("ID_rezept")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdZutaten")
                        .HasColumnName("ID_zutaten")
                        .HasColumnType("int(11)");

                    b.Property<decimal>("Menge")
                        .HasColumnType("decimal(11,3)");

                    b.HasKey("Id");

                    b.HasIndex("IdRezept")
                        .HasName("fk_rezept");

                    b.HasIndex("IdZutaten")
                        .HasName("fk_zutaten");

                    b.ToTable("lnk_tab_rezept_zutaten");
                });

            modelBuilder.Entity("Automatisches_Kochbuch.Model.LnkTabUserRezepte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<int>("AnzahlPortionen")
                        .HasColumnName("Anzahl_Portionen")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdRezepte")
                        .HasColumnName("ID_rezepte")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdUser")
                        .HasColumnName("ID_user")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("IdRezepte")
                        .HasName("fk_rezepte");

                    b.HasIndex("IdUser")
                        .HasName("fk_user");

                    b.ToTable("lnk_tab_user_rezepte");
                });

            modelBuilder.Entity("Automatisches_Kochbuch.Model.LnkTabUserZutaten", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdUser")
                        .HasColumnName("ID_user")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdZutaten")
                        .HasColumnName("ID_zutaten")
                        .HasColumnType("int(11)");

                    b.Property<int>("Menge")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("IdUser")
                        .HasName("fk_user");

                    b.HasIndex("IdZutaten")
                        .HasName("fk_zutaten");

                    b.ToTable("lnk_tab_user_zutaten");
                });

            modelBuilder.Entity("Automatisches_Kochbuch.Model.TabRezepte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<byte[]>("Bild")
                        .IsRequired()
                        .HasColumnType("mediumblob");

                    b.Property<bool>("Glutenfrei")
                        .HasColumnName("glutenfrei")
                        .HasColumnType("boolean");

                    b.Property<string>("Rezeptname")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Vegan")
                        .HasColumnName("vegan")
                        .HasColumnType("boolean");

                    b.Property<bool>("Vegetarisch")
                        .HasColumnName("vegetarisch")
                        .HasColumnType("boolean");

                    b.Property<string>("Zubereitung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Rezeptname")
                        .IsUnique()
                        .HasName("Rezeptname");

                    b.ToTable("tab_rezepte");
                });

            modelBuilder.Entity("Automatisches_Kochbuch.Model.TabUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<int>("AnzahlPortionen")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Anzahl Portionen")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool>("Glutenfrei")
                        .HasColumnName("glutenfrei")
                        .HasColumnType("boolean");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Passwort")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .IsRequired();

                    b.Property<bool>("Veganer")
                        .HasColumnType("boolean");

                    b.Property<bool>("Vegetarier")
                        .HasColumnType("boolean");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tab_user");
                });

            modelBuilder.Entity("Automatisches_Kochbuch.Model.TabZutaten", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<bool>("Glutenfrei")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("glutenfrei")
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("IdZutatEinheit")
                        .HasColumnName("ID_Zutat_Einheit")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdZutatKategorie")
                        .HasColumnName("ID_Zutat_Kategorie")
                        .HasColumnType("int(11)");

                    b.Property<bool>("Vegan")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vegan")
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool>("Vegetarisch")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vegetarisch")
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Zutat")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Zutat")
                        .IsUnique()
                        .HasName("Zutat");

                    b.ToTable("tab_zutaten");
                });

            modelBuilder.Entity("Automatisches_Kochbuch.Model.TabZutatenEinheit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Einheit")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EinheitKuerzel")
                        .IsRequired()
                        .HasColumnName("Einheit_Kuerzel")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("tab_zutaten_einheit");
                });

            modelBuilder.Entity("Automatisches_Kochbuch.Model.TabZutatenKategorien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Kategorie")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tab_zutaten_kategorien");
                });

            modelBuilder.Entity("Automatisches_Kochbuch.Model.LnkTabRezeptZutaten", b =>
                {
                    b.HasOne("Automatisches_Kochbuch.Model.TabRezepte", "IdRezeptNavigation")
                        .WithMany("LnkTabRezeptZutaten")
                        .HasForeignKey("IdRezept")
                        .HasConstraintName("lnk_tab_rezept_zutaten_ibfk_1");

                    b.HasOne("Automatisches_Kochbuch.Model.TabZutaten", "IdZutatenNavigation")
                        .WithMany("LnkTabRezeptZutaten")
                        .HasForeignKey("IdZutaten")
                        .HasConstraintName("lnk_tab_rezept_zutaten_ibfk_2");
                });

            modelBuilder.Entity("Automatisches_Kochbuch.Model.LnkTabUserRezepte", b =>
                {
                    b.HasOne("Automatisches_Kochbuch.Model.TabRezepte", "IdRezepteNavigation")
                        .WithMany("LnkTabUserRezepte")
                        .HasForeignKey("IdRezepte")
                        .HasConstraintName("lnk_tab_user_rezepte_ibfk_1");

                    b.HasOne("Automatisches_Kochbuch.Model.TabUser", "IdUserNavigation")
                        .WithMany("LnkTabUserRezepte")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("lnk_tab_user_rezepte_ibfk_2");
                });

            modelBuilder.Entity("Automatisches_Kochbuch.Model.LnkTabUserZutaten", b =>
                {
                    b.HasOne("Automatisches_Kochbuch.Model.TabUser", "IdUserNavigation")
                        .WithMany("LnkTabUserZutaten")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("lnk_tab_user_zutaten_ibfk_1");

                    b.HasOne("Automatisches_Kochbuch.Model.TabZutaten", "IdZutatenNavigation")
                        .WithMany("LnkTabUserZutaten")
                        .HasForeignKey("IdZutaten")
                        .HasConstraintName("lnk_tab_user_zutaten_ibfk_2");
                });
#pragma warning restore 612, 618
        }
    }
}
